---
#---------------------------------------------#
Parameters:
  # EC2 instance type to be created by ASG
  MyInstanceType:
    #Type: AWS::EC2::Instance
    #AvailabilityZone: us-east-1a
    #ImageId: ami-a4c7edb2
    Description: ASG EC2 instance type
    Type: String
    Default: t2.micro

#--------------------------------------------#
Resources:
  # Auto scaling group
  MyASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      AutoScalingGroupName: asg-eira-cloudformation
      AvailabilityZones: 
        - us-east-1a
      LaunchConfigurationName: !Ref MyLaunchConfig
      DesiredCapacity: '2'
      MaxSize: '4'
      MinSize: '2'
      Cooldown: '300'
      LoadBalancerNames: 
        - !Ref MyLoadBalancer

  # Launch configuration for auto scaling group
  MyLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties: 
      #KeyName:
      ImageId: ami-a4c7edb2
      InstanceType: !Ref MyInstanceType
      #UserData: if you want to install something on the EC2 instance
      SecurityGroups: 
        - !Ref MyInstanceSecurityGroup

  # Application load balancer
  MyLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      AvailabilityZones: 
        - us-east-1a
      Listeners:
        - LoadBalancerPort: '80'
          InstancePort: '80'
          Protocol: HTTP
      HealthCheck:
        Target: HTTP:80/
        HealthyThreshold: '3'
        UnhealthyThreshold: '5'
        Interval: '30'
        Timeout: '5'

  # Scaling policies
  ScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref MyASG
      Cooldown: '60'
      ScalingAdjustment: 1 # increase with 1 instance

  ScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref MyASG
      Cooldown: '60'
      ScalingAdjustment: -1 # decrease with 1 instance

  # Metrics to scale on
  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
        AlarmDescription: Scale-up if CPU > 90% for 10 minutes
        MetricName: CPUUtilization
        Namespace: AWS/EC2
        Statistic: Average
        Period: 300
        EvaluationPeriods: 2
        Threshold: 90
        AlarmActions: 
          - !Ref ScaleUpPolicy
        Dimensions:
          - Name: AutoScalingGroupName
            Value: !Ref MyASG
        ComparisonOperator: GreaterThanThreshold

  CPUAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
        AlarmDescription: Scale-down if CPU < 70% for 10 minutes
        MetricName: CPUUtilization
        Namespace: AWS/EC2
        Statistic: Average
        Period: 300
        EvaluationPeriods: 2
        Threshold: 70
        AlarmActions: 
          - !Ref ScaleDownPolicy
        Dimensions:
          - Name: AutoScalingGroupName
            Value: !Ref MyASG
        ComparisonOperator: LessThanThreshold

  # Security group 
  MyInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access and HTTP from the load balancer only
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0 #!Ref SSHLocation # SSH
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
      - FromPort: 80 # HTTP
        IpProtocol: tcp
        ToPort: 80
        SourceSecurityGroupOwnerId: !GetAtt MyLoadBalancer.SourceSecurityGroup.OwnerAlias   
        SourceSecurityGroupName: !GetAtt MyLoadBalancer.SourceSecurityGroup.GroupName             

#--------------------------------------------#
Outputs:
  URL:
    Description: The URL of the website
    Value:  !Join [ "http://", [ !GetAtt MyLoadBalancer.DNSName ]]  